{"version":3,"file":"index.modern.mjs","sources":["../src/hooks/useForm.js","../src/utils/objectHandlers.js","../src/components/AliceAuthPage/form.dto.js","../src/components/AliceAuthPage/Index.jsx"],"sourcesContent":["import { byString } from \"../utils/objectHandlers\";\nimport * as yup from \"yup\";\nimport { useEffect, useState } from \"react\";\nObject.byString = byString;\nconst useForm = (initdataModel, schema) => {\n  const [dataModel, setDataModel] = useState(initdataModel);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [isBusy, setIsBusy] = useState(false);\n  const validate = async () => {\n    const options = { abortEarly: false };\n    const errors = {};\n    try {\n      await schema.validate(dataModel, options);\n      return null;\n    } catch (err) {\n      err.inner.forEach((item) => {\n        errors[item.path] = item.message;\n      });\n      return errors;\n    }\n  };\n  const validateProperty = async (field, value) => {\n    const errors = { ...validationErrors };\n    try {\n      const objSchema = yup.reach(schema, field);\n      await objSchema.validate(value);\n      /**\n       * if reached this block after promise it means validation success.\n       * remove the errors if there is any regarding this field.\n       */\n      delete errors[field];\n    } catch (err) {\n      /**\n       * invalid input detected. update with proper error message on the\n       * respective field.\n       */\n      errors[field] = err.message;\n    } finally {\n      /**\n       * finally we are just setting the erros to state.\n       */\n      setValidationErrors(errors);\n    }\n  };\n  const handleSubmit = async (e, doSubmit, reset = true, options = {}) => {\n    e.preventDefault();\n    const errors = await validate();\n    if (errors) return setValidationErrors(errors);\n    // Form submission logic here ....\n    function submission() {\n      return new Promise(async (resolve, reject) => {\n        try {\n          await doSubmit(dataModel, e);\n          if (reset) resetForm();\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n    try {\n      setIsBusy(true);\n      await submission();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsBusy(false);\n  };\n  const handleChange = ({ field, value }) => {\n    const data = { ...dataModel };\n    data[field] = value;\n    setDataModel(data);\n    validateProperty(field, value);\n  };\n  const resetForm = () => {\n    setDataModel(initdataModel);\n    setValidationErrors({});\n  };\n  const _isObject = (object) => object !== null && typeof object === \"object\";\n  const _deepEqual = (referenceObject, testObject) => {\n    const referenceKeys = Object.keys(referenceObject);\n    const testKeys = Object.keys(testObject);\n    if (referenceKeys.length !== testKeys.length) return false;\n    for (const key of referenceKeys) {\n      const referenceValue = referenceObject[key];\n      const testValue = testObject[key];\n      const hasProperties = _isObject(referenceValue);\n      if (!hasProperties && referenceValue !== testValue) return false;\n      if (hasProperties && !_deepEqual(referenceValue, testValue)) return false;\n    }\n    return true;\n  };\n  const hasUnsavedData = () => !_deepEqual(initdataModel, dataModel);\n  const isFormValid = () => Object.keys(validationErrors).length === 0;\n  useEffect(() => {\n    console.log(\"datamodel\", dataModel);\n    console.log(\"validation error:\", validationErrors);\n  }, [dataModel, validationErrors]);\n  /** validation runner is required the first time the form renders. */\n  useEffect(() => {\n    (async function () {\n      const errors = await validate();\n      if (errors) return setValidationErrors(errors);\n    })();\n  }, []);\n  return {\n    dataModel,\n    validationErrors,\n    isBusy,\n    handleChange,\n    handleSubmit,\n    isFormValid,\n    resetForm,\n    hasUnsavedData,\n  };\n};\nexport default useForm;\n","export const byString = function (object, accessString) {\n  accessString = accessString.replace(/\\[(\\w+)\\]/g, \".$1\");\n  accessString = accessString.replace(/^\\./, \"\");\n  let accessKeys = accessString.split(\".\");\n  for (let i = 0, n = accessKeys.length; i < n; ++i) {\n    let key = accessKeys[i];\n    if (key in object) {\n      object = object[key];\n    } else {\n      return;\n    }\n  }\n  return object;\n};\n","import * as yup from \"yup\";\r\nexport let defaultAuthDataSet = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nexport let defaultAuthDataSetValidation = yup.object({\r\n  email: yup.string().required().email().label(\"Email\"),\r\n  password: yup.string().required().min(8).label(\"Password\"),\r\n});\r\nexport let defaultRegisterDataSet = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nexport let defaultRegisterDataSetValidation = yup.object({\r\n  name: yup.string().required().label(\"Name\"),\r\n  email: yup.string().required().email().label(\"Email\"),\r\n  password: yup.string().required().min(8).label(\"Password\"),\r\n});\r\n\r\nexport let defaultRecoveryDataSet = {\r\n  email: \"\",\r\n};\r\nexport let defaultRecoveryDataSetValidation = yup.object({\r\n  email: yup.string().required().email().label(\"Email\"),\r\n});\r\nexport let defaultRecoveryVerificationDataSet = {\r\n  password: \"\",\r\n};\r\nexport let defaultRecoveryVerificationDataSetValidation = yup.object({\r\n  password: yup.string().required().min(8).label(\"Password\"),\r\n});\r\n","import {\n  Button,\n  Col,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Row,\n  Spinner,\n} from \"ims-ui-kit\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { BiEnvelope, BiLock, BiLogInCircle } from \"react-icons/bi\";\nimport useForm from \"../../hooks/useForm\";\nimport { defaultAuthDataSet, defaultAuthDataSetValidation } from \"./form.dto\";\nconst Login = ({\n  onLogin = () => {},\n  onPasswordChange = () => {},\n  onEmailChange = () => {},\n}) => {\n  let { dataModel, handleChange, isBusy, handleSubmit, isFormValid } = useForm(\n    defaultAuthDataSet,\n    defaultAuthDataSetValidation\n  );\n  return (\n    <div className=\"login-form\">\n      <img\n        className=\"login-alice-logo mb-4\"\n        src={\n          \"https://assets.imssystems.tech/images/logo/alice/alice-full-logo.svg\"\n        }\n      />\n      <h4 className=\"\">Welcome!</h4>\n      <p className=\"mb-5\">Boost your business efficiency with AI technology.</p>\n      <Form>\n        <InputGroup>\n          <InputGroupText>\n            <BiEnvelope />\n          </InputGroupText>\n          <Input\n            label=\"Email\"\n            placeholder=\"Email\"\n            type=\"email\"\n            autoComplete=\"off\"\n            value={dataModel.email}\n            onChange={(e) => {\n              const changes = {\n                field: \"email\",\n                value: e.currentTarget.value,\n              };\n              handleChange(changes);\n              onEmailChange(changes);\n            }}\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputGroupText>\n            <BiLock />\n          </InputGroupText>\n          <Input\n            label=\"Password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            autoComplete=\"off\"\n            value={dataModel.password}\n            onChange={(e) => {\n              const changes = {\n                field: \"password\",\n                value: e.currentTarget.value,\n              };\n              handleChange(changes);\n              onPasswordChange(changes);\n            }}\n          />\n        </InputGroup>\n        <a\n          className=\"btn-link\"\n          href={\"https://alice.imssystems.tech/accounts/recovery\"}\n        >\n          <small>Forgot password?</small>\n        </a>\n        <Button\n          className=\"mt-5 mb-2\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={(e) => handleSubmit(e, onLogin)}\n          disabled={!isFormValid() || isBusy}\n          block\n        >\n          {isBusy ? (\n            <React.Fragment>\n              Signing in <Spinner size=\"sm\" />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              Sign in <BiLogInCircle />\n            </React.Fragment>\n          )}\n        </Button>\n      </Form>\n      <small>Don't have an account? Let's </small>\n      <a\n        className=\"btn-link\"\n        href={\"https://alice.imssystems.tech/accounts/register\"}\n      >\n        <small>Get Started</small>.\n      </a>\n    </div>\n  );\n};\n\n/**\n *\n * @param {Object} props\n * @returns\n */\nconst AliceAuthPage = (props) => {\n  return (\n    <Row className=\"h-100\">\n      <Col md=\"5\" className=\"mx-auto\">\n        <Login {...props} />\n      </Col>\n    </Row>\n  );\n};\n\nAliceAuthPage.propTypes = {\n  onLogin: PropTypes.func,\n  onPasswordChange: PropTypes.func,\n  onEmailChange: PropTypes.func,\n};\n\nexport default AliceAuthPage;\n"],"names":["Object","byString","object","accessString","accessKeys","replace","split","i","n","length","key","defaultAuthDataSet","email","password","defaultAuthDataSetValidation","yup","string","required","label","min","name","Login","onLogin","onPasswordChange","onEmailChange","dataModel","handleChange","isBusy","handleSubmit","isFormValid","useForm","initdataModel","schema","setDataModel","useState","validationErrors","setValidationErrors","setIsBusy","validate","async","options","abortEarly","errors","err","inner","forEach","item","path","message","resetForm","_deepEqual","referenceObject","testObject","referenceKeys","keys","testKeys","referenceValue","testValue","hasProperties","useEffect","console","log","field","value","data","_extends","objSchema","reach","validateProperty","e","doSubmit","reset","preventDefault","Promise","resolve","reject","hasUnsavedData","_jsxs","className","children","_jsx","src","Form","InputGroup","InputGroupText","BiEnvelope","Input","placeholder","type","autoComplete","onChange","changes","currentTarget","BiLock","href","Button","color","onClick","disabled","block","React","Fragment","Spinner","size","BiLogInCircle","AliceAuthPage","props","Row","Col","md","propTypes","PropTypes","func"],"mappings":"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"}