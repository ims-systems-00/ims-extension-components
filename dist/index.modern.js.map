{"version":3,"file":"index.modern.js","sources":["../src/hooks/useForm.js","../src/utils/objectHandlers.js","../src/components/AliceAuthPage/form.dto.js","../src/components/AliceAuthPage/Index.jsx"],"sourcesContent":["import { byString } from \"../utils/objectHandlers\";\nimport * as yup from \"yup\";\nimport { useEffect, useState } from \"react\";\nObject.byString = byString;\nconst useForm = (initdataModel, schema) => {\n  const [dataModel, setDataModel] = useState(initdataModel);\n  const [validationErrors, setValidationErrors] = useState({});\n  const [isBusy, setIsBusy] = useState(false);\n  const validate = async () => {\n    const options = { abortEarly: false };\n    const errors = {};\n    try {\n      await schema.validate(dataModel, options);\n      return null;\n    } catch (err) {\n      err.inner.forEach((item) => {\n        errors[item.path] = item.message;\n      });\n      return errors;\n    }\n  };\n  const validateProperty = async (field, value) => {\n    const errors = { ...validationErrors };\n    try {\n      const objSchema = yup.reach(schema, field);\n      await objSchema.validate(value);\n      /**\n       * if reached this block after promise it means validation success.\n       * remove the errors if there is any regarding this field.\n       */\n      delete errors[field];\n    } catch (err) {\n      /**\n       * invalid input detected. update with proper error message on the\n       * respective field.\n       */\n      errors[field] = err.message;\n    } finally {\n      /**\n       * finally we are just setting the erros to state.\n       */\n      setValidationErrors(errors);\n    }\n  };\n  const handleSubmit = async (e, doSubmit, reset = true, options = {}) => {\n    e.preventDefault();\n    const errors = await validate();\n    if (errors) return setValidationErrors(errors);\n    // Form submission logic here ....\n    function submission() {\n      return new Promise(async (resolve, reject) => {\n        try {\n          await doSubmit(dataModel, e);\n          if (reset) resetForm();\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n    try {\n      setIsBusy(true);\n      await submission();\n    } catch (err) {\n      console.log(err);\n    }\n    setIsBusy(false);\n  };\n  const handleChange = ({ field, value }) => {\n    const data = { ...dataModel };\n    data[field] = value;\n    setDataModel(data);\n    validateProperty(field, value);\n  };\n  const resetForm = () => {\n    setDataModel(initdataModel);\n    setValidationErrors({});\n  };\n  const _isObject = (object) => object !== null && typeof object === \"object\";\n  const _deepEqual = (referenceObject, testObject) => {\n    const referenceKeys = Object.keys(referenceObject);\n    const testKeys = Object.keys(testObject);\n    if (referenceKeys.length !== testKeys.length) return false;\n    for (const key of referenceKeys) {\n      const referenceValue = referenceObject[key];\n      const testValue = testObject[key];\n      const hasProperties = _isObject(referenceValue);\n      if (!hasProperties && referenceValue !== testValue) return false;\n      if (hasProperties && !_deepEqual(referenceValue, testValue)) return false;\n    }\n    return true;\n  };\n  const hasUnsavedData = () => !_deepEqual(initdataModel, dataModel);\n  const isFormValid = () => Object.keys(validationErrors).length === 0;\n  useEffect(() => {\n    console.log(\"datamodel\", dataModel);\n    console.log(\"validation error:\", validationErrors);\n  }, [dataModel, validationErrors]);\n  /** validation runner is required the first time the form renders. */\n  useEffect(() => {\n    (async function () {\n      const errors = await validate();\n      if (errors) return setValidationErrors(errors);\n    })();\n  }, []);\n  return {\n    dataModel,\n    validationErrors,\n    isBusy,\n    handleChange,\n    handleSubmit,\n    isFormValid,\n    resetForm,\n    hasUnsavedData,\n  };\n};\nexport default useForm;\n","export const byString = function (object, accessString) {\n  accessString = accessString.replace(/\\[(\\w+)\\]/g, \".$1\");\n  accessString = accessString.replace(/^\\./, \"\");\n  let accessKeys = accessString.split(\".\");\n  for (let i = 0, n = accessKeys.length; i < n; ++i) {\n    let key = accessKeys[i];\n    if (key in object) {\n      object = object[key];\n    } else {\n      return;\n    }\n  }\n  return object;\n};\n","import * as yup from \"yup\";\r\nexport let defaultAuthDataSet = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nexport let defaultAuthDataSetValidation = yup.object({\r\n  email: yup.string().required().email().label(\"Email\"),\r\n  password: yup.string().required().min(8).label(\"Password\"),\r\n});\r\nexport let defaultRegisterDataSet = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nexport let defaultRegisterDataSetValidation = yup.object({\r\n  name: yup.string().required().label(\"Name\"),\r\n  email: yup.string().required().email().label(\"Email\"),\r\n  password: yup.string().required().min(8).label(\"Password\"),\r\n});\r\n\r\nexport let defaultRecoveryDataSet = {\r\n  email: \"\",\r\n};\r\nexport let defaultRecoveryDataSetValidation = yup.object({\r\n  email: yup.string().required().email().label(\"Email\"),\r\n});\r\nexport let defaultRecoveryVerificationDataSet = {\r\n  password: \"\",\r\n};\r\nexport let defaultRecoveryVerificationDataSetValidation = yup.object({\r\n  password: yup.string().required().min(8).label(\"Password\"),\r\n});\r\n","import {\n  Button,\n  Col,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Row,\n  Spinner,\n} from \"ims-ui-kit\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { BiEnvelope, BiLock, BiLogInCircle } from \"react-icons/bi\";\nimport useForm from \"../../hooks/useForm\";\nimport { defaultAuthDataSet, defaultAuthDataSetValidation } from \"./form.dto\";\nconst Login = ({\n  onLogin = () => {},\n  onPasswordChange = () => {},\n  onEmailChange = () => {},\n}) => {\n  let { dataModel, handleChange, isBusy, handleSubmit, isFormValid } = useForm(\n    defaultAuthDataSet,\n    defaultAuthDataSetValidation\n  );\n  return (\n    <div className=\"login-form\">\n      <img\n        className=\"login-alice-logo mb-4\"\n        src={\n          \"https://assets.imssystems.tech/images/logo/alice/alice-full-logo.svg\"\n        }\n      />\n      <h4 className=\"\">Welcome!</h4>\n      <p className=\"mb-5\">Boost your business efficiency with AI technology.</p>\n      <Form>\n        <InputGroup>\n          <InputGroupText>\n            <BiEnvelope />\n          </InputGroupText>\n          <Input\n            label=\"Email\"\n            placeholder=\"Email\"\n            type=\"email\"\n            autoComplete=\"off\"\n            value={dataModel.email}\n            onChange={(e) => {\n              const changes = {\n                field: \"email\",\n                value: e.currentTarget.value,\n              };\n              handleChange(changes);\n              onEmailChange(changes);\n            }}\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputGroupText>\n            <BiLock />\n          </InputGroupText>\n          <Input\n            label=\"Password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            autoComplete=\"off\"\n            value={dataModel.password}\n            onChange={(e) => {\n              const changes = {\n                field: \"password\",\n                value: e.currentTarget.value,\n              };\n              handleChange(changes);\n              onPasswordChange(changes);\n            }}\n          />\n        </InputGroup>\n        <a\n          className=\"btn-link\"\n          href={\"https://alice.imssystems.tech/accounts/recovery\"}\n        >\n          <small>Forgot password?</small>\n        </a>\n        <Button\n          className=\"mt-5 mb-2\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={(e) => handleSubmit(e, onLogin)}\n          disabled={!isFormValid() || isBusy}\n          block\n        >\n          {isBusy ? (\n            <React.Fragment>\n              Signing in <Spinner size=\"sm\" />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              Sign in <BiLogInCircle />\n            </React.Fragment>\n          )}\n        </Button>\n      </Form>\n      <small>Don't have an account? Let's </small>\n      <a\n        className=\"btn-link\"\n        href={\"https://alice.imssystems.tech/accounts/register\"}\n      >\n        <small>Get Started</small>.\n      </a>\n    </div>\n  );\n};\n\n/**\n *\n * @param {Object} props\n * @returns\n */\nconst AliceAuthPage = (props) => {\n  return (\n    <Row className=\"h-100\">\n      <Col md=\"5\" className=\"mx-auto\">\n        <Login {...props} />\n      </Col>\n    </Row>\n  );\n};\n\nAliceAuthPage.propTypes = {\n  onLogin: PropTypes.func,\n  onPasswordChange: PropTypes.func,\n  onEmailChange: PropTypes.func,\n};\n\nexport default AliceAuthPage;\n"],"names":["_catch","body","recover","result","e","then","Object","byString","object","accessString","accessKeys","replace","split","i","n","length","key","useForm","initdataModel","schema","_useState","useState","dataModel","setDataModel","_useState2","validationErrors","setValidationErrors","_useState3","isBusy","setIsBusy","validate","options","abortEarly","errors","Promise","resolve","err","inner","forEach","item","path","message","reject","resetForm","_deepEqual","referenceObject","testObject","referenceKeys","keys","testKeys","_i","_referenceKeys","referenceValue","testValue","hasProperties","useEffect","console","log","handleChange","_ref","field","value","data","_extends","_temp","finalizer","objSchema","yup","reach","bind","_finallyRethrows","_wasThrown","_result","validateProperty","handleSubmit","doSubmit","reset","preventDefault","_temp3","_temp2","isFormValid","hasUnsavedData","defaultAuthDataSet","email","password","defaultAuthDataSetValidation","string","required","label","min","name","Login","_ref$onLogin","onLogin","_ref$onPasswordChange","onPasswordChange","_ref$onEmailChange","onEmailChange","_useForm","_jsxs","className","children","_jsx","src","Form","InputGroup","InputGroupText","BiEnvelope","Input","placeholder","type","autoComplete","onChange","changes","currentTarget","BiLock","href","Button","color","onClick","disabled","block","React","Fragment","Spinner","size","BiLogInCircle","AliceAuthPage","props","Row","Col","md","propTypes","PropTypes","func"],"mappings":"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"}